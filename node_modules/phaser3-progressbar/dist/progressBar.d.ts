/** Configuration format. */
export interface ProgressBarConfig {
    /** X coordinate for the center of the progress bar.
     *  @default 260 */
    centerX?: number;
    /** Y coordinate for the center of the progress bar.
     *  @default 30 */
    centerY?: number;
    /** Total width of the bar, borders included.
     *  @default 500 */
    width?: number;
    /** Total height of the bar, borders included.
     *  @default 50 */
    height?: number;
    /** Fill color of the progress bar box.
     *  @default 0x000000 */
    boxFill?: number;
    /** Fill alpha of the progress bar box.
     *  @default 1 */
    boxFillAlpha?: number;
    /** Stroke size of the progress bar box.
     *  @default 5 */
    boxStroke?: number;
    /** Stroke color of the progress bar box.
     *  @default 0xFFFFFF */
    boxStrokeColor?: number;
    /** Stroke alpha of the progress bar box.
     *  @default 1 */
    boxStrokeAlpha?: number;
    /** Radius for a rounded progress bar box, if > 0. If 0, the box is not rounded.
     *  @default 0 */
    boxRadius?: number;
    /** Fill color of the progress bar.
     *  @default 0xFFFFFF */
    barFill?: number;
    /** Fill alpha of the progress bar.
     *  @default 1 */
    barFillAlpha?: number;
    /** Stroke size of the progress bar.
     *  @default 0 */
    barStroke?: number;
    /** Stroke color of the progress bar.
     *  @default 0xFFFFFF */
    barStrokeColor?: number;
    /** Stroke alpha of the progress bar.
     *  @default 1 */
    barStrokeAlpha?: number;
    /** Radius for a rounded progress bar, if > 0. If 0, the bar is not rounded.
     *  @default 0 */
    barRadius?: number;
    /** Horizontal padding between progress bar and box.
     *  @default 0 */
    paddingH?: number;
    /** Vertical padding between progress bar and box.
     *  @default 0 */
    paddingV?: number;
    /** Minimum width for the bar to be drawn.
     *  When using a rounded bar it is best to set this higher than 1 (at least the
     *  radius size) to avoid visual artifacts.
     *  @default 1 */
    minBarWidth?: number;
}
/** progress Bar class. Manages a progress bar based on the configuration. */
export declare class ProgressBar {
    private context;
    private readonly config;
    private box;
    private bar;
    private readonly boxX;
    private readonly boxY;
    private readonly boxWidth;
    private readonly boxHeight;
    private readonly barX;
    private readonly barY;
    private readonly barWidth;
    private readonly barHeight;
    /** Constructor. Builds the progress bar and displays it.
     *  @param config configuration object
     *  @param context the scene to display the progress bar in */
    constructor(context: Phaser.Scene, config?: ProgressBarConfig);
    /** Updates the progress bar with the new progress fraction.
     *  @param progress the fraction of progress, between 0 and 1 */
    update(progress: number): void;
    /** Destroys the progress bar graphics. */
    destroy(): void;
    /**
     * Resets the progress bar to an empty state.
     */
    reset(): void;
    /** Sets the line and fill styles for box and bar. */
    private setStyles;
    /** Draws the progress bar box. */
    private drawBox;
    /** Draws the progress bar. */
    private drawBar;
}
